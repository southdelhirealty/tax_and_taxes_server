# Enable mod_rewrite
RewriteEngine On

# Force HTTPS redirect
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Remove trailing slash
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{THE_REQUEST} /+([^?\s]*?)/+(\?[^?\s]*)?(\s|\?|$)
RewriteRule ^ /%1%2 [R=301,L]

# AGGRESSIVE MIME Type Configuration for JavaScript modules
<IfModule mod_mime.c>
    # Remove any existing handlers for JS files
    RemoveHandler .js
    RemoveHandler .mjs
    RemoveType .js
    RemoveType .mjs
    
    # Force JavaScript MIME types
    AddType text/javascript .js
    AddType text/javascript .mjs
    AddType application/javascript .js
    AddType application/javascript .mjs
    
    # Other MIME types
    AddType image/webp .webp
    AddType image/avif .avif
    AddType font/woff2 .woff2
    AddType application/manifest+json .webmanifest
    AddType application/json .json
    AddType text/css .css
</IfModule>

# AGGRESSIVE Header Configuration for JavaScript files
<IfModule mod_headers.c>
    # Force correct Content-Type for ALL JavaScript files
    <FilesMatch "\.(js|mjs)$">
        Header unset Content-Type
        Header always set Content-Type "text/javascript; charset=utf-8"
        Header always set X-Content-Type-Options "nosniff"
        Header always set Cache-Control "public, max-age=31536000, immutable"
        ForceType text/javascript
    </FilesMatch>
    
    # Force correct Content-Type for CSS files
    <FilesMatch "\.css$">
        Header unset Content-Type
        Header always set Content-Type "text/css; charset=utf-8"
        ForceType text/css
    </FilesMatch>
    
    # Ensure HTML files have correct MIME type
    <FilesMatch "\.html$">
        Header unset Content-Type
        Header always set Content-Type "text/html; charset=utf-8"
        ForceType text/html
    </FilesMatch>
</IfModule>

# Alternative MIME type forcing for different server configurations
<Files "*.js">
    ForceType text/javascript
    Header always set Content-Type "text/javascript; charset=utf-8"
</Files>

<Files "*.mjs">
    ForceType text/javascript
    Header always set Content-Type "text/javascript; charset=utf-8"
</Files>

<Files "*.css">
    ForceType text/css
    Header always set Content-Type "text/css; charset=utf-8"
</Files>

# LiteSpeed Cache specific settings
<IfModule Litespeed>
    # Ensure MIME types are properly cached
    CacheLookup on
    
    # Force correct MIME type for JavaScript
    <FilesMatch "\.(js|mjs)$">
        ExpiresActive On
        ExpiresDefault "access plus 1 year"
        Header always set Content-Type "text/javascript; charset=utf-8"
        Header always set Cache-Control "public, max-age=31536000, immutable"
        ForceType text/javascript
    </FilesMatch>
    
    # Force correct MIME type for CSS
    <FilesMatch "\.css$">
        ExpiresActive On
        ExpiresDefault "access plus 1 year"
        Header always set Content-Type "text/css; charset=utf-8"
        ForceType text/css
    </FilesMatch>
</IfModule>

# Compression
<IfModule mod_deflate.c>
  # Compress HTML, CSS, JavaScript, Text, XML and fonts
  AddOutputFilterByType DEFLATE application/javascript
  AddOutputFilterByType DEFLATE text/javascript
  AddOutputFilterByType DEFLATE text/css
  AddOutputFilterByType DEFLATE text/html
  AddOutputFilterByType DEFLATE text/xml
  AddOutputFilterByType DEFLATE application/xml
  AddOutputFilterByType DEFLATE application/xhtml+xml
  AddOutputFilterByType DEFLATE application/rss+xml
  AddOutputFilterByType DEFLATE application/x-javascript
  AddOutputFilterByType DEFLATE text/plain
  AddOutputFilterByType DEFLATE image/svg+xml
  AddOutputFilterByType DEFLATE image/x-icon
  AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
  AddOutputFilterByType DEFLATE application/x-font
  AddOutputFilterByType DEFLATE application/x-font-opentype
  AddOutputFilterByType DEFLATE application/x-font-otf
  AddOutputFilterByType DEFLATE application/x-font-truetype
  AddOutputFilterByType DEFLATE application/x-font-ttf
  AddOutputFilterByType DEFLATE font/opentype
  AddOutputFilterByType DEFLATE font/otf
  AddOutputFilterByType DEFLATE font/ttf
</IfModule>

# Expires headers (Browser Caching)
<IfModule mod_expires.c>
  ExpiresActive on
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType text/javascript "access plus 1 year"
  ExpiresByType application/javascript "access plus 1 year"
  ExpiresByType application/x-javascript "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/jpg "access plus 1 year"
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/gif "access plus 1 year"
  ExpiresByType image/ico "access plus 1 year"
  ExpiresByType image/icon "access plus 1 year"
  ExpiresByType image/x-icon "access plus 1 year"
  ExpiresByType text/plain "access plus 1 month"
  ExpiresByType application/pdf "access plus 1 month"
  ExpiresDefault "access plus 2 days"
</IfModule>

# Additional Cache-Control Headers
<IfModule mod_headers.c>
  # 1 year for image and video files
  <filesmatch "\.(flv|gif|jpg|jpeg|png|ico|swf|webp|avif)$">
    Header set Cache-Control "max-age=31536000, public"
  </filesmatch>
  
  # 1 month for everything else
  <filesmatch "\.(pdf|txt)$">
    Header set Cache-Control "max-age=2592000, public"
  </filesmatch>

  # WebP and AVIF support
  <FilesMatch "\.(webp|avif)$">
    Header set Cache-Control "max-age=31536000, public, immutable"
  </FilesMatch>
  
  # Image compression headers
  <FilesMatch "\.(jpg|jpeg|png|gif|svg|webp|avif)$">
    Header set Vary "Accept-Encoding"
    Header append Vary "Accept"
  </FilesMatch>
</IfModule>

# Security headers
<IfModule mod_headers.c>
  # X-Frame-Options
  Header always set X-Frame-Options DENY
  
  # X-XSS-Protection
  Header always set X-XSS-Protection "1; mode=block"
  
  # Referrer Policy
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  
  # Updated Content Security Policy with Cashfree support
  Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: https://www.googletagmanager.com https://www.google-analytics.com https://sdk.cashfree.com https://js.cashfree.com; style-src 'self' 'unsafe-inline' data: https://fonts.googleapis.com; img-src 'self' data: https: blob:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://walrus-app-qitis.ondigitalocean.app https://www.google-analytics.com https://analytics.google.com https://api.cashfree.com https://sandbox.cashfree.com https://checkout.cashfree.com; frame-src 'self' https://sdk.cashfree.com https://api.cashfree.com https://sandbox.cashfree.com https://payments.cashfree.com https://payments-test.cashfree.com https://checkout.cashfree.com; object-src 'none'; base-uri 'self'; form-action 'self' https://sandbox.cashfree.com https://api.cashfree.com https://payments.cashfree.com https://payments-test.cashfree.com https://checkout.cashfree.com;"
</IfModule>

# Block access to sensitive files
<Files ".htaccess">
  Order allow,deny
  Deny from all
</Files>

<Files "*.log">
  Order allow,deny
  Deny from all
</Files>

# Prevent access to .git directory
RedirectMatch 404 /\.git

# SPA (Single Page Application) support
# Handle client-side routing for React Router
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.html [L]

# Custom error pages
ErrorDocument 404 /404.html
ErrorDocument 500 /500.html 
